// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: document.capnp

#include "document.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<27> b_f638d18cb9d8f2fd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    253, 242, 216, 185, 140, 209,  56, 246,
     29,   0,   0,   0,   4,   0,   0,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58, 109,  97, 103,
    105,  99,  78, 117, 109,  98, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  66,   0,   0,   0,
     69,  88,  79,  45,  77,  79,  68,  85, }
};
::capnp::word const* const bp_f638d18cb9d8f2fd = b_f638d18cb9d8f2fd.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_f638d18cb9d8f2fd = {
  0xf638d18cb9d8f2fd, b_f638d18cb9d8f2fd.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_f638d18cb9d8f2fd, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<27> b_b9fec0afa09d2253 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     83,  34, 157, 160, 175, 192, 254, 185,
     29,   0,   0,   0,   1,   0,   0,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  86, 101, 114,
    115, 105, 111, 110, 115,   0,   0,   0,
     12,   0,   0,   0,   1,   0,   1,   0,
    145,  27,  53, 170, 189, 252, 123, 128,
     17,   0,   0,   0,  66,   0,   0,   0,
    148,  30, 143,  89,  82,  79,  30, 133,
     13,   0,   0,   0,  66,   0,   0,   0,
     30, 162, 107,  36,  42, 206, 237, 132,
      9,   0,   0,   0,  66,   0,   0,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
    109, 105, 110, 105, 109, 117, 109,   0,
     99, 117, 114, 114, 101, 110, 116,   0, }
};
::capnp::word const* const bp_b9fec0afa09d2253 = b_b9fec0afa09d2253.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b9fec0afa09d2253 = {
  0xb9fec0afa09d2253, b_b9fec0afa09d2253.words, 27, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b9fec0afa09d2253, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_807bfcbdaa351b91 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145,  27,  53, 170, 189, 252, 123, 128,
     38,   0,   0,   0,   4,   0,   0,   0,
     83,  34, 157, 160, 175, 192, 254, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  86, 101, 114,
    115, 105, 111, 110, 115,  46, 117, 110,
    107, 110, 111, 119, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_807bfcbdaa351b91 = b_807bfcbdaa351b91.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_807bfcbdaa351b91 = {
  0x807bfcbdaa351b91, b_807bfcbdaa351b91.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_807bfcbdaa351b91, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_851e4f52598f1e94 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148,  30, 143,  89,  82,  79,  30, 133,
     38,   0,   0,   0,   4,   0,   0,   0,
     83,  34, 157, 160, 175, 192, 254, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  86, 101, 114,
    115, 105, 111, 110, 115,  46, 109, 105,
    110, 105, 109, 117, 109,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_851e4f52598f1e94 = b_851e4f52598f1e94.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_851e4f52598f1e94 = {
  0x851e4f52598f1e94, b_851e4f52598f1e94.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_851e4f52598f1e94, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<26> b_84edce2a246ba21e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     30, 162, 107,  36,  42, 206, 237, 132,
     38,   0,   0,   0,   4,   0,   0,   0,
     83,  34, 157, 160, 175, 192, 254, 185,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  86, 101, 114,
    115, 105, 111, 110, 115,  46,  99, 117,
    114, 114, 101, 110, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_84edce2a246ba21e = b_84edce2a246ba21e.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_84edce2a246ba21e = {
  0x84edce2a246ba21e, b_84edce2a246ba21e.words, 26, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_84edce2a246ba21e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<65> b_ea4dcf6fcffaec80 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    128, 236, 250, 207, 111, 207,  77, 234,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 121,
     98, 101,  69, 102, 102, 101,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,  48,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,  49,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ea4dcf6fcffaec80 = b_ea4dcf6fcffaec80.words;
#if !CAPNP_LITE
static const uint16_t m_ea4dcf6fcffaec80[] = {0, 1, 2};
static const uint16_t i_ea4dcf6fcffaec80[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ea4dcf6fcffaec80 = {
  0xea4dcf6fcffaec80, b_ea4dcf6fcffaec80.words, 65, nullptr, m_ea4dcf6fcffaec80,
  0, 3, i_ea4dcf6fcffaec80, nullptr, nullptr, { &s_ea4dcf6fcffaec80, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<95> b_b6b53975f04d0698 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    152,   6,  77, 240, 117,  57, 181, 182,
     29,   0,   0,   0,   1,   0,   3,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101, 100,  82, 111, 119,  69, 118, 101,
    110, 116,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    136, 222, 235, 141,  21, 218, 241, 242,
    169,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     99, 171, 207,  62, 198, 223, 249, 239,
    145,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    223, 233, 195, 146, 182, 109,  98, 243,
    121,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
     97, 110,  99, 104, 111, 114,  66, 101,
     97, 116,  78, 117, 109,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 110,  99, 104, 111, 114,  66, 101,
     97, 116,  68, 101, 110,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116, 101,   0,   0,   0,   0,
    105, 110, 115, 116, 114,   0,   0,   0,
    118, 111, 108, 117, 109, 101,   0,   0,
    101, 102, 102, 101,  99, 116, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    128, 236, 250, 207, 111, 207,  77, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b6b53975f04d0698 = b_b6b53975f04d0698.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b6b53975f04d0698[] = {
  &s_ea4dcf6fcffaec80,
  &s_eff9dfc63ecfab63,
  &s_f2f1da158debde88,
  &s_f3626db692c3e9df,
};
static const uint16_t m_b6b53975f04d0698[] = {1, 0, 5, 3, 2, 4};
static const uint16_t i_b6b53975f04d0698[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_b6b53975f04d0698 = {
  0xb6b53975f04d0698, b_b6b53975f04d0698.words, 95, d_b6b53975f04d0698, m_b6b53975f04d0698,
  4, 6, i_b6b53975f04d0698, nullptr, nullptr, { &s_b6b53975f04d0698, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_f2f1da158debde88 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    136, 222, 235, 141,  21, 218, 241, 242,
     43,   0,   0,   0,   1,   0,   3,   0,
    152,   6,  77, 240, 117,  57, 181, 182,
      1,   0,   7,   0,   1,   0,   2,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101, 100,  82, 111, 119,  69, 118, 101,
    110, 116,  46, 110, 111, 116, 101,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   5,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 109, 101,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f2f1da158debde88 = b_f2f1da158debde88.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f2f1da158debde88[] = {
  &s_b6b53975f04d0698,
};
static const uint16_t m_f2f1da158debde88[] = {0, 1};
static const uint16_t i_f2f1da158debde88[] = {0, 1};
const ::capnp::_::RawSchema s_f2f1da158debde88 = {
  0xf2f1da158debde88, b_f2f1da158debde88.words, 49, d_f2f1da158debde88, m_f2f1da158debde88,
  1, 2, i_f2f1da158debde88, nullptr, nullptr, { &s_f2f1da158debde88, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_eff9dfc63ecfab63 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     99, 171, 207,  62, 198, 223, 249, 239,
     43,   0,   0,   0,   1,   0,   3,   0,
    152,   6,  77, 240, 117,  57, 181, 182,
      1,   0,   7,   0,   1,   0,   2,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101, 100,  82, 111, 119,  69, 118, 101,
    110, 116,  46, 105, 110, 115, 116, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,  14,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 109, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_eff9dfc63ecfab63 = b_eff9dfc63ecfab63.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_eff9dfc63ecfab63[] = {
  &s_b6b53975f04d0698,
};
static const uint16_t m_eff9dfc63ecfab63[] = {0, 1};
static const uint16_t i_eff9dfc63ecfab63[] = {0, 1};
const ::capnp::_::RawSchema s_eff9dfc63ecfab63 = {
  0xeff9dfc63ecfab63, b_eff9dfc63ecfab63.words, 50, d_eff9dfc63ecfab63, m_eff9dfc63ecfab63,
  1, 2, i_eff9dfc63ecfab63, nullptr, nullptr, { &s_eff9dfc63ecfab63, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_f3626db692c3e9df = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223, 233, 195, 146, 182, 109,  98, 243,
     43,   0,   0,   0,   1,   0,   3,   0,
    152,   6,  77, 240, 117,  57, 181, 182,
      1,   0,   7,   0,   1,   0,   2,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101, 100,  82, 111, 119,  69, 118, 101,
    110, 116,  46, 118, 111, 108, 117, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,  15,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 109, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f3626db692c3e9df = b_f3626db692c3e9df.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f3626db692c3e9df[] = {
  &s_b6b53975f04d0698,
};
static const uint16_t m_f3626db692c3e9df[] = {0, 1};
static const uint16_t i_f3626db692c3e9df[] = {0, 1};
const ::capnp::_::RawSchema s_f3626db692c3e9df = {
  0xf3626db692c3e9df, b_f3626db692c3e9df.words, 50, d_f3626db692c3e9df, m_f3626db692c3e9df,
  1, 2, i_f3626db692c3e9df, nullptr, nullptr, { &s_f3626db692c3e9df, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_e9bfcd5dae76e2b5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    181, 226, 118, 174,  93, 205, 191, 233,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80,  97, 116,
    116, 101, 114, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    152,   6,  77, 240, 117,  57, 181, 182,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 111, 112,  76, 101, 110, 103,
    116, 104,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e9bfcd5dae76e2b5 = b_e9bfcd5dae76e2b5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e9bfcd5dae76e2b5[] = {
  &s_b6b53975f04d0698,
};
static const uint16_t m_e9bfcd5dae76e2b5[] = {0, 1};
static const uint16_t i_e9bfcd5dae76e2b5[] = {0, 1};
const ::capnp::_::RawSchema s_e9bfcd5dae76e2b5 = {
  0xe9bfcd5dae76e2b5, b_e9bfcd5dae76e2b5.words, 54, d_e9bfcd5dae76e2b5, m_e9bfcd5dae76e2b5,
  1, 2, i_e9bfcd5dae76e2b5, nullptr, nullptr, { &s_e9bfcd5dae76e2b5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_e78f975f863e0853 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     83,   8,  62, 134,  95, 151, 143, 231,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101, 108, 105, 110, 101,  66, 108, 111,
     99, 107,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
     98, 101, 103, 105, 110,  84, 105, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 100,  84, 105, 109, 101,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 116, 116, 101, 114, 110,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    181, 226, 118, 174,  93, 205, 191, 233,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e78f975f863e0853 = b_e78f975f863e0853.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e78f975f863e0853[] = {
  &s_e9bfcd5dae76e2b5,
};
static const uint16_t m_e78f975f863e0853[] = {0, 1, 2};
static const uint16_t i_e78f975f863e0853[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e78f975f863e0853 = {
  0xe78f975f863e0853, b_e78f975f863e0853.words, 66, d_e78f975f863e0853, m_e78f975f863e0853,
  1, 3, i_e78f975f863e0853, nullptr, nullptr, { &s_e78f975f863e0853, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_cffbc472e0f2ff20 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     32, 255, 242, 224, 114, 196, 251, 207,
     29,   0,   0,   0,   1,   0,   0,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101, 108, 105, 110, 101,  67, 101, 108,
    108,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     83,   8,  62, 134,  95, 151, 143, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cffbc472e0f2ff20 = b_cffbc472e0f2ff20.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cffbc472e0f2ff20[] = {
  &s_e78f975f863e0853,
};
static const uint16_t m_cffbc472e0f2ff20[] = {0};
static const uint16_t i_cffbc472e0f2ff20[] = {0};
const ::capnp::_::RawSchema s_cffbc472e0f2ff20 = {
  0xcffbc472e0f2ff20, b_cffbc472e0f2ff20.words, 39, d_cffbc472e0f2ff20, m_cffbc472e0f2ff20,
  1, 1, i_cffbc472e0f2ff20, nullptr, nullptr, { &s_cffbc472e0f2ff20, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<77> b_d1c37795ff851c2f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     47,  28, 133, 255, 149, 119, 195, 209,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  84, 105, 109,
    101, 108, 105, 110, 101,  73, 116, 101,
    109,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    110,  98, 101,  97, 116, 115,  78, 117,
    109,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  98, 101,  97, 116, 115,  68, 101,
    110,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 112,  67, 104,  97, 110,
    110, 101, 108,  67, 101, 108, 108, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     32, 255, 242, 224, 114, 196, 251, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d1c37795ff851c2f = b_d1c37795ff851c2f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d1c37795ff851c2f[] = {
  &s_cffbc472e0f2ff20,
};
static const uint16_t m_d1c37795ff851c2f[] = {2, 1, 0};
static const uint16_t i_d1c37795ff851c2f[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d1c37795ff851c2f = {
  0xd1c37795ff851c2f, b_d1c37795ff851c2f.words, 77, d_d1c37795ff851c2f, m_d1c37795ff851c2f,
  1, 3, i_d1c37795ff851c2f, nullptr, nullptr, { &s_d1c37795ff851c2f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<67> b_e0a81db883371cec = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    236,  28,  55, 131, 184,  29, 168, 224,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  83,  97, 109,
    112, 108, 101,  84, 117, 110, 105, 110,
    103,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    115,  97, 109, 112, 108, 101,  82,  97,
    116, 101,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111, 111, 116,  75, 101, 121,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 116, 117, 110, 101,  67, 101,
    110, 116, 115,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e0a81db883371cec = b_e0a81db883371cec.words;
#if !CAPNP_LITE
static const uint16_t m_e0a81db883371cec[] = {2, 1, 0};
static const uint16_t i_e0a81db883371cec[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e0a81db883371cec = {
  0xe0a81db883371cec, b_e0a81db883371cec.words, 67, nullptr, m_e0a81db883371cec,
  0, 3, i_e0a81db883371cec, nullptr, nullptr, { &s_e0a81db883371cec, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<43> b_90a6dcb426a2f466 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    102, 244, 162,  38, 180, 220, 166, 144,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      3,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 121,
     98, 101,  83,  97, 109, 112, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    148, 248, 131, 206, 243, 194, 101, 216,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 109, 101,   0,   0,   0,   0, }
};
::capnp::word const* const bp_90a6dcb426a2f466 = b_90a6dcb426a2f466.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_90a6dcb426a2f466[] = {
  &s_d865c2f3ce83f894,
};
static const uint16_t m_90a6dcb426a2f466[] = {0, 1};
static const uint16_t i_90a6dcb426a2f466[] = {0, 1};
const ::capnp::_::RawSchema s_90a6dcb426a2f466 = {
  0x90a6dcb426a2f466, b_90a6dcb426a2f466.words, 43, d_90a6dcb426a2f466, m_90a6dcb426a2f466,
  1, 2, i_90a6dcb426a2f466, nullptr, nullptr, { &s_90a6dcb426a2f466, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<84> b_d865c2f3ce83f894 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148, 248, 131, 206, 243, 194, 101, 216,
     41,   0,   0,   0,   1,   0,   1,   0,
    102, 244, 162,  38, 180, 220, 166, 144,
      3,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 121,
     98, 101,  83,  97, 109, 112, 108, 101,
     46, 115, 111, 109, 101,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114, 114,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 111, 112,  66, 121, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 117, 110, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    236,  28,  55, 131, 184,  29, 168, 224,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d865c2f3ce83f894 = b_d865c2f3ce83f894.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d865c2f3ce83f894[] = {
  &s_90a6dcb426a2f466,
  &s_e0a81db883371cec,
};
static const uint16_t m_d865c2f3ce83f894[] = {1, 2, 0, 3};
static const uint16_t i_d865c2f3ce83f894[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d865c2f3ce83f894 = {
  0xd865c2f3ce83f894, b_d865c2f3ce83f894.words, 84, d_d865c2f3ce83f894, m_d865c2f3ce83f894,
  2, 4, i_d865c2f3ce83f894, nullptr, nullptr, { &s_d865c2f3ce83f894, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<79> b_8dc3992ae107d7db = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    219, 215,   7, 225,  42, 153, 195, 141,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  65, 100, 115,
    114,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
     97, 116, 116,  97,  99, 107,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101,  99,  97, 121,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117, 115, 116,  97, 105, 110,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 108, 101,  97, 115, 101,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8dc3992ae107d7db = b_8dc3992ae107d7db.words;
#if !CAPNP_LITE
static const uint16_t m_8dc3992ae107d7db[] = {0, 1, 3, 2};
static const uint16_t i_8dc3992ae107d7db[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_8dc3992ae107d7db = {
  0x8dc3992ae107d7db, b_8dc3992ae107d7db.words, 79, nullptr, m_8dc3992ae107d7db,
  0, 4, i_8dc3992ae107d7db, nullptr, nullptr, { &s_8dc3992ae107d7db, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<66> b_b294b061e6cb1894 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148,  24, 203, 230,  97, 176, 148, 178,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  73, 110, 115,
    116, 114, 117, 109, 101, 110, 116,  80,
     97, 116,  99, 104,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    109, 105, 110,  78, 111, 116, 101,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 109, 112, 108, 101,  73, 100,
    120,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 100, 115, 114,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    219, 215,   7, 225,  42, 153, 195, 141,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b294b061e6cb1894 = b_b294b061e6cb1894.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b294b061e6cb1894[] = {
  &s_8dc3992ae107d7db,
};
static const uint16_t m_b294b061e6cb1894[] = {2, 0, 1};
static const uint16_t i_b294b061e6cb1894[] = {0, 1, 2};
const ::capnp::_::RawSchema s_b294b061e6cb1894 = {
  0xb294b061e6cb1894, b_b294b061e6cb1894.words, 66, d_b294b061e6cb1894, m_b294b061e6cb1894,
  1, 3, i_b294b061e6cb1894, nullptr, nullptr, { &s_b294b061e6cb1894, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<43> b_835a01387cde4b67 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103,  75, 222, 124,  56,   1,  90, 131,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      2,   0,   7,   0,   0,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 121,
     98, 101,  73, 110, 115, 116, 114, 117,
    109, 101, 110, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    244, 237,  43, 206, 213, 200, 106, 240,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 110, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 109, 101,   0,   0,   0,   0, }
};
::capnp::word const* const bp_835a01387cde4b67 = b_835a01387cde4b67.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_835a01387cde4b67[] = {
  &s_f06ac8d5ce2bedf4,
};
static const uint16_t m_835a01387cde4b67[] = {0, 1};
static const uint16_t i_835a01387cde4b67[] = {0, 1};
const ::capnp::_::RawSchema s_835a01387cde4b67 = {
  0x835a01387cde4b67, b_835a01387cde4b67.words, 43, d_835a01387cde4b67, m_835a01387cde4b67,
  1, 2, i_835a01387cde4b67, nullptr, nullptr, { &s_835a01387cde4b67, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_f06ac8d5ce2bedf4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    244, 237,  43, 206, 213, 200, 106, 240,
     45,   0,   0,   0,   1,   0,   1,   0,
    103,  75, 222, 124,  56,   1,  90, 131,
      2,   0,   7,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 146,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  77,  97, 121,
     98, 101,  73, 110, 115, 116, 114, 117,
    109, 101, 110, 116,  46, 115, 111, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    107, 101, 121, 115, 112, 108, 105, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    148,  24, 203, 230,  97, 176, 148, 178,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f06ac8d5ce2bedf4 = b_f06ac8d5ce2bedf4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f06ac8d5ce2bedf4[] = {
  &s_835a01387cde4b67,
  &s_b294b061e6cb1894,
};
static const uint16_t m_f06ac8d5ce2bedf4[] = {1, 0};
static const uint16_t i_f06ac8d5ce2bedf4[] = {0, 1};
const ::capnp::_::RawSchema s_f06ac8d5ce2bedf4 = {
  0xf06ac8d5ce2bedf4, b_f06ac8d5ce2bedf4.words, 55, d_f06ac8d5ce2bedf4, m_f06ac8d5ce2bedf4,
  2, 2, i_f06ac8d5ce2bedf4, nullptr, nullptr, { &s_f06ac8d5ce2bedf4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_83a993bc64da75a1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161, 117, 218, 100, 188, 147, 169, 131,
     29,   0,   0,   0,   1,   0,   2,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  83, 101, 113,
    117, 101, 110,  99, 101, 114,  79, 112,
    116, 105, 111, 110, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
    116,  97, 114, 103, 101, 116,  84, 101,
    109, 112, 111,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112,  99,  84, 105, 109, 101, 114,
     80, 101, 114, 105, 111, 100,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105,  99, 107, 115,  80, 101, 114,
     66, 101,  97, 116,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_83a993bc64da75a1 = b_83a993bc64da75a1.words;
#if !CAPNP_LITE
static const uint16_t m_83a993bc64da75a1[] = {1, 0, 2};
static const uint16_t i_83a993bc64da75a1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_83a993bc64da75a1 = {
  0x83a993bc64da75a1, b_83a993bc64da75a1.words, 68, nullptr, m_83a993bc64da75a1,
  0, 3, i_83a993bc64da75a1, nullptr, nullptr, { &s_83a993bc64da75a1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_b79be6fd6b53c23a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58, 194,  83, 107, 253, 230, 155, 183,
     29,   0,   0,   0,   2,   0,   0,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  65,  99,  99,
    105, 100, 101, 110, 116,  97, 108,  77,
    111, 100, 101,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97, 114, 112,   0,   0,   0,
    102, 108,  97, 116,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b79be6fd6b53c23a = b_b79be6fd6b53c23a.words;
#if !CAPNP_LITE
static const uint16_t m_b79be6fd6b53c23a[] = {1, 0};
const ::capnp::_::RawSchema s_b79be6fd6b53c23a = {
  0xb79be6fd6b53c23a, b_b79be6fd6b53c23a.words, 28, nullptr, m_b79be6fd6b53c23a,
  0, 2, nullptr, nullptr, nullptr, { &s_b79be6fd6b53c23a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(AccidentalMode_b79be6fd6b53c23a, b79be6fd6b53c23a);
static const ::capnp::_::AlignedData<27> b_a8a856289ab511b0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    176,  17, 181, 154,  40,  86, 168, 168,
     29,   0,   0,   0,   2,   0,   0,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  67, 104, 105,
    112,  75, 105, 110, 100,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 110, 107, 110, 111, 119, 110,   0,
    115, 112,  99,  55,  48,  48,   0,   0, }
};
::capnp::word const* const bp_a8a856289ab511b0 = b_a8a856289ab511b0.words;
#if !CAPNP_LITE
static const uint16_t m_a8a856289ab511b0[] = {1, 0};
const ::capnp::_::RawSchema s_a8a856289ab511b0 = {
  0xa8a856289ab511b0, b_a8a856289ab511b0.words, 27, nullptr, m_a8a856289ab511b0,
  0, 2, nullptr, nullptr, nullptr, { &s_a8a856289ab511b0, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ChipKind_a8a856289ab511b0, a8a856289ab511b0);
static const ::capnp::_::AlignedData<36> b_c011ae832de79b57 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     87, 155, 231,  45, 131, 174,  17, 192,
     29,   0,   0,   0,   1,   0,   1,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  80, 101, 114,
     67, 104,  97, 110, 110, 101, 108,  83,
    101, 116, 116, 105, 110, 103, 115,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    110,  69, 102, 102, 101,  99, 116,  67,
    111, 108,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c011ae832de79b57 = b_c011ae832de79b57.words;
#if !CAPNP_LITE
static const uint16_t m_c011ae832de79b57[] = {0};
static const uint16_t i_c011ae832de79b57[] = {0};
const ::capnp::_::RawSchema s_c011ae832de79b57 = {
  0xc011ae832de79b57, b_c011ae832de79b57.words, 36, nullptr, m_c011ae832de79b57,
  0, 1, i_c011ae832de79b57, nullptr, nullptr, { &s_c011ae832de79b57, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<222> b_ebd00718fee78c30 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     48, 140, 231, 254,  24,   7, 208, 235,
     29,   0,   0,   0,   1,   0,   2,   0,
    212, 222, 147, 231, 182,  81,  75, 214,
      7,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 111,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47, 115, 101, 114, 105,
     97, 108, 105, 122, 101,  47, 100, 111,
     99, 117, 109, 101, 110, 116,  46,  99,
     97, 112, 110, 112,  58,  68, 111,  99,
    117, 109, 101, 110, 116,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     44,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   1,   0,   0,   3,   0,   1,   0,
     56,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   3,   0,   1,   0,
     88,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   1,   0,   0,   3,   0,   1,   0,
     96,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     93,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   1,   0,   0,   3,   0,   1,   0,
    104,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   1,   0,   0,   3,   0,   1,   0,
    124,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   3,   0,   1,   0,
    148,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   1,   0,   0,   3,   0,   1,   0,
    168,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   1,   0,   0, 162,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   1,   0,   0,   3,   0,   1,   0,
    212,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   1,   0,   0,   3,   0,   1,   0,
    236,   1,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 113, 117, 101, 110,  99, 101,
    114,  79, 112, 116, 105, 111, 110, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    161, 117, 218, 100, 188, 147, 169, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 113, 117, 101, 110,  99,
    121,  84,  97,  98, 108, 101,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99, 105, 100, 101, 110, 116,
     97, 108,  77, 111, 100, 101,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     58, 194,  83, 107, 253, 230, 155, 183,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122, 111, 111, 109,  76, 101, 118, 101,
    108,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 102, 102, 101,  99, 116,  78,  97,
    109, 101,  67, 104,  97, 114, 115,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 109, 112, 108, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    102, 244, 162,  38, 180, 220, 166, 144,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 115, 116, 114, 117, 109, 101,
    110, 116, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103,  75, 222, 124,  56,   1,  90, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 112, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    176,  17, 181, 154,  40,  86, 168, 168,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104, 105, 112,  67, 104,  97, 110,
    110, 101, 108,  83, 101, 116, 116, 105,
    110, 103, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     87, 155, 231,  45, 131, 174,  17, 192,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 105, 109, 101, 108, 105, 110, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     47,  28, 133, 255, 149, 119, 195, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ebd00718fee78c30 = b_ebd00718fee78c30.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ebd00718fee78c30[] = {
  &s_835a01387cde4b67,
  &s_83a993bc64da75a1,
  &s_90a6dcb426a2f466,
  &s_a8a856289ab511b0,
  &s_b79be6fd6b53c23a,
  &s_c011ae832de79b57,
  &s_d1c37795ff851c2f,
};
static const uint16_t m_ebd00718fee78c30[] = {3, 9, 8, 5, 2, 7, 6, 1, 10, 0, 4};
static const uint16_t i_ebd00718fee78c30[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
const ::capnp::_::RawSchema s_ebd00718fee78c30 = {
  0xebd00718fee78c30, b_ebd00718fee78c30.words, 222, d_ebd00718fee78c30, m_ebd00718fee78c30,
  7, 11, i_ebd00718fee78c30, nullptr, nullptr, { &s_ebd00718fee78c30, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace serialize {
namespace generated {

const ::capnp::_::ConstData<8> MAGIC_NUMBER(::capnp::schemas::b_f638d18cb9d8f2fd.words + 26);
// Versions
constexpr uint16_t Versions::_capnpPrivate::dataWordSize;
constexpr uint16_t Versions::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Versions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Versions::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

#ifndef _MSC_VER
constexpr  ::uint32_t Versions::UNKNOWN;
#endif
#ifndef _MSC_VER
constexpr  ::uint32_t Versions::MINIMUM;
#endif
#ifndef _MSC_VER
constexpr  ::uint32_t Versions::CURRENT;
#endif
// MaybeEffect
constexpr uint16_t MaybeEffect::_capnpPrivate::dataWordSize;
constexpr uint16_t MaybeEffect::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MaybeEffect::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MaybeEffect::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TimedRowEvent
constexpr uint16_t TimedRowEvent::_capnpPrivate::dataWordSize;
constexpr uint16_t TimedRowEvent::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimedRowEvent::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimedRowEvent::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TimedRowEvent::Note
constexpr uint16_t TimedRowEvent::Note::_capnpPrivate::dataWordSize;
constexpr uint16_t TimedRowEvent::Note::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimedRowEvent::Note::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimedRowEvent::Note::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TimedRowEvent::Instr
constexpr uint16_t TimedRowEvent::Instr::_capnpPrivate::dataWordSize;
constexpr uint16_t TimedRowEvent::Instr::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimedRowEvent::Instr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimedRowEvent::Instr::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TimedRowEvent::Volume
constexpr uint16_t TimedRowEvent::Volume::_capnpPrivate::dataWordSize;
constexpr uint16_t TimedRowEvent::Volume::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimedRowEvent::Volume::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimedRowEvent::Volume::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Pattern
constexpr uint16_t Pattern::_capnpPrivate::dataWordSize;
constexpr uint16_t Pattern::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Pattern::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Pattern::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TimelineBlock
constexpr uint16_t TimelineBlock::_capnpPrivate::dataWordSize;
constexpr uint16_t TimelineBlock::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimelineBlock::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimelineBlock::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TimelineCell
constexpr uint16_t TimelineCell::_capnpPrivate::dataWordSize;
constexpr uint16_t TimelineCell::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimelineCell::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimelineCell::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// TimelineItem
constexpr uint16_t TimelineItem::_capnpPrivate::dataWordSize;
constexpr uint16_t TimelineItem::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind TimelineItem::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TimelineItem::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SampleTuning
constexpr uint16_t SampleTuning::_capnpPrivate::dataWordSize;
constexpr uint16_t SampleTuning::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SampleTuning::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SampleTuning::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MaybeSample
constexpr uint16_t MaybeSample::_capnpPrivate::dataWordSize;
constexpr uint16_t MaybeSample::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MaybeSample::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MaybeSample::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MaybeSample::Some
constexpr uint16_t MaybeSample::Some::_capnpPrivate::dataWordSize;
constexpr uint16_t MaybeSample::Some::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MaybeSample::Some::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MaybeSample::Some::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Adsr
constexpr uint16_t Adsr::_capnpPrivate::dataWordSize;
constexpr uint16_t Adsr::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Adsr::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Adsr::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// InstrumentPatch
constexpr uint16_t InstrumentPatch::_capnpPrivate::dataWordSize;
constexpr uint16_t InstrumentPatch::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind InstrumentPatch::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* InstrumentPatch::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MaybeInstrument
constexpr uint16_t MaybeInstrument::_capnpPrivate::dataWordSize;
constexpr uint16_t MaybeInstrument::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MaybeInstrument::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MaybeInstrument::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// MaybeInstrument::Some
constexpr uint16_t MaybeInstrument::Some::_capnpPrivate::dataWordSize;
constexpr uint16_t MaybeInstrument::Some::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind MaybeInstrument::Some::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MaybeInstrument::Some::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// SequencerOptions
constexpr uint16_t SequencerOptions::_capnpPrivate::dataWordSize;
constexpr uint16_t SequencerOptions::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind SequencerOptions::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SequencerOptions::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// PerChannelSettings
constexpr uint16_t PerChannelSettings::_capnpPrivate::dataWordSize;
constexpr uint16_t PerChannelSettings::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind PerChannelSettings::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* PerChannelSettings::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Document
constexpr uint16_t Document::_capnpPrivate::dataWordSize;
constexpr uint16_t Document::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Document::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Document::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

