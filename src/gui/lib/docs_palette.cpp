#include "docs_palette.h"

namespace gui::lib::docs_palette {
namespace detail {

// Generated by https://github.com/nyanpasu64/gdocspalette-generator.
//
// https://material.io/design/color/the-color-system.html would be nice.
// Qt has a Material palette built in... but only in qml.
// Extract the constants from the source?
// https://github.com/qt/qtdeclarative/blob/dev/src/quickcontrols2/material/qquickmaterialstyle.cpp

constinit QColor const GRAYS[SHADE_COUNT] = {
    QColor(0, 0, 0),
    QColor(67, 67, 67),
    QColor(102, 102, 102),
    QColor(153, 153, 153),
    QColor(183, 183, 183),
    QColor(211, 211, 211),
    QColor(239, 239, 239),
    QColor(255, 255, 255),
};

constinit QColor const COLORS[HUE_COUNT][SHADE_COUNT] = {
    {
        QColor(0, 0, 0),
        QColor(102, 0, 0),
        QColor(153, 0, 0),
        QColor(204, 0, 0),
        QColor(224, 102, 102),
        QColor(234, 153, 153),
        QColor(244, 204, 204),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(120, 63, 4),
        QColor(180, 95, 6),
        QColor(230, 145, 56),
        QColor(246, 178, 107),
        QColor(249, 203, 156),
        QColor(252, 229, 205),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(127, 96, 0),
        QColor(191, 144, 0),
        QColor(241, 194, 50),
        QColor(255, 217, 102),
        QColor(255, 229, 153),
        QColor(255, 242, 204),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(39, 78, 19),
        QColor(56, 118, 29),
        QColor(106, 168, 79),
        QColor(147, 196, 125),
        QColor(182, 215, 168),
        QColor(217, 234, 211),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(12, 52, 61),
        QColor(19, 79, 92),
        QColor(69, 129, 142),
        QColor(118, 165, 175),
        QColor(162, 196, 201),
        QColor(208, 224, 227),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(28, 69, 135),
        QColor(17, 85, 204),
        QColor(60, 120, 216),
        QColor(109, 158, 235),
        QColor(164, 194, 244),
        QColor(201, 218, 248),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(7, 55, 99),
        QColor(11, 83, 148),
        QColor(61, 133, 198),
        QColor(111, 168, 220),
        QColor(159, 197, 232),
        QColor(207, 226, 243),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(32, 18, 77),
        QColor(53, 28, 117),
        QColor(103, 78, 167),
        QColor(142, 124, 195),
        QColor(180, 167, 214),
        QColor(217, 210, 233),
        QColor(255, 255, 255),
    },
    {
        QColor(0, 0, 0),
        QColor(76, 17, 48),
        QColor(116, 27, 71),
        QColor(166, 77, 121),
        QColor(194, 123, 160),
        QColor(213, 166, 189),
        QColor(234, 209, 220),
        QColor(255, 255, 255),
    },
};

constinit QColor const PURE_COLORS[HUE_COUNT] = {
    QColor(255, 0, 0),
    QColor(255, 153, 0),
    QColor(255, 255, 0),
    QColor(0, 255, 0),
    QColor(0, 255, 255),
    QColor(74, 134, 232),
    QColor(0, 0, 255),
    QColor(153, 0, 255),
    QColor(255, 0, 255),
};

}
} // namespace
